How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed me the lines where there was a difference.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could compare current version to old to fix newly introduced bugs.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    PRO = commit can be done at a logically sensible point, CON = I might forget or not bother to create a commit soon enough.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because they are designed to be used for multiple interdepenendent file projects.

How can you use the commands git log and git diff to view the history of files?

    git log shows a history of commits and git diff shows the lines which have changed

How might using version control make you more confident to make changes that
could break something?

    Because I could roll back if I made a mistake.
	
Now that you have your workspace set up, what do you want to try using Git for?

    Tracking changes to my prod and research code
